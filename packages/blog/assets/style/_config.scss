$white:#fff;
$primary-color: #003366;
$theme-color:#003366;
$danger-color:#f00;
$warn-color:#ff0;
$muted-color:#777;
$gray-color:#aaa;
$base-color: #383838;
$light-color:#f9f9f9;
$black: #000;
$main-viewport:1180px;
$base-space : 10px;
$top-nav-height : 80px;
$bottom-nav-height : 30px;
$logo-width : 200px;
$active-theme-color:darken($theme-color, 10%);
$hover-theme-color:darken($theme-color, 10%);
$wrap-box-background-color : rgba($white, 0.05);
$header-and-footer-background-color : rgba($white, 0.20);
$base-border-style:1px solid #f0f0f0;
$base-box-shadow:0 0 5px #efefef;
$z-index : (welcomeMask :1000,
  welcome : 1001,
  header:999,
  footer:999,
  suffix:9999);

@mixin margin ($margin...) {
  margin: $margin;
}

@mixin padding ($padding...) {
  padding: $padding;
}

@mixin position($pos:initial, $top:0, $right:0, $bottom:0, $left:0) {
  position: $pos;
  top: $top;
  right: $right;
  bottom: $bottom;
  left: $left;
}

@mixin border($value) {
  border: $value;
}

@mixin opacity($opacity:100) {
  opacity: $opacity/100;
  // -ms-filter: progid:DXImageTransform.Microsoft.Alpha(Opacity:#{$opacity});
  // filter: progid:DXImageTransform.Microsoft.Alpha(Opacity:#{$opacity});
}

$originalPrefix: (-webkit-:true,
  -moz-:true,
  -ms-:true,
  -o-:false,
  -normal-:true);

@mixin setPrefix($prefixes, $cssProperty, $value, $to:1) {

  @each $key,
  $val in $prefixes {
    @if ($val==true) {
      @if($key !=-normal-) {
        @if($to==0) {

          #{$cssProperty} : #{unquote($key+$value)};

        }

        @else {

          #{unquote($key+$cssProperty)}: $value;

        }
      }

      @else {
        #{$cssProperty}: $value;
      }
    }
  }
}

@mixin boxSizing($value:border-box) {
  $sizingPrefix: (-webkit-:true, -moz-:true, -normal-:true);
  @include setPrefix($sizingPrefix, box-sizing, $value);
}

@mixin borderRadius($value:50%) {
  $radiusPrefix: (-webkit-:true, -moz-:true, -normal-:true);
  @include setPrefix($radiusPrefix, border-radius, $value);
}

@mixin boxShadow($value...) {
  $shadowPrefix: (-webkit-:true, -moz-:true, -normal-:true);
  @include setPrefix($shadowPrefix, box-shadow, $value);
}

@mixin transition($value...) {
  @include setPrefix($originalPrefix, transition, $value);
}

@mixin transform($value...) {
  @include setPrefix($originalPrefix, transform, $value);
}

@mixin linearGradient($cssProperty, $value, $startColor:#fff, $endColor:#fff) {
  $linearPrefix: (-webkit-:true, -moz-:true, -normal-:true);
  @include setPrefix($linearPrefix, $cssProperty, $value, 0);
  $isSupportLowestIE: false;
  $supportLowestIE: 9;

  @if($isSupportLowestIE==true and $supportLowestIE <10) {
    filter: progid:DXImageTransform.Microsoft.Gradient(GradientType=1, startColorStr=#{$startColor}, endColorStr=#{$endColor});
  }
}

@mixin ellipsis {
  text-overflow: ellipsis;
  overflow: hidden;
  word-break: normal;
  white-space: nowrap;
}

@mixin role-rule($direction:'left', $borderColor:$active-theme-color) {
  &:before {
    position: absolute;
    content: '';
    width: 0;
    height: 0;
    border: 7px solid transparent;

    @if ($direction=='left'or $direction=='right') {
      top: 50%;
      margin-top: -7px;

      @if ($direction=='left') {
        border-right-color: $borderColor;
        border-left: 0;
        left: -7px;
      }

      @else if ($direction=='right') {
        border-left-color: $borderColor;
        border-right: 0;
        right: -7px;
      }
    }

    @else if ($direction=='top'or $direction=='bottom') {
      left: 50%;
      margin-left: -7px;

      @if ($direction=='top') {
        border-bottom-color: $borderColor;
        border-top: 0;
        top: -7px;
      }

      @else if ($direction=='bottom') {
        border-top-color: $borderColor;
        border-bottom: 0;
        bottom: -7px;
      }
    }
  }
}

%role-left {
  @include role-rule;
}

%role-right {
  @include role-rule('right');
}

%role-top {
  @include role-rule('top');
}

%role-bottom {
  @include role-rule('bottom');
}

@mixin card-base {
  position: relative;
  display: inline-block;
  font-size: 14px;
  padding: 6px 10px;
  font-weight: 300;
  border-radius: 4px;
  white-space: initial;
  margin-left: 10px;
  color: $white;
  background-color: $active-theme-color;
  @include transition(all 300ms);

  a {
    color: $white;

    &:hover {
      color: $hover-theme-color;
    }
  }
}

@mixin scroller-y($overflow: hidden auto, $height: 100%) {
  box-sizing: content-box;
  overflow: $overflow;
  height: $height;
  width: 100%;
  padding-right: 30px;

  &:hover {
    .yScroller {
      opacity: .8;
      cursor: pointer;
      visibility: visible;
    }
  }

  .yScroller {
    visibility: hidden;
    position: absolute;
    min-height: 40px;
    width: 8px;
    background-color: $theme-color;
    top: 0px;
    right: 15px;
    transition: all .3s;
    opacity: 0;
  }
}
